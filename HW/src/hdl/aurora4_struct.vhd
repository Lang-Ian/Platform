--
-- VHDL Architecture aurora4.aurora4.struct
--
-- Created:
--          by - iala270035.UNKNOWN (ATL00049)
--          at - 17:55:01 12.04.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2020.1 Built on 20 Jan 2020 at 19:37:36
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY aurora4;
LIBRARY unisim;
use unisim.vcomponents.all;

ARCHITECTURE struct OF aurora4 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL A0                      : std_logic;
   SIGNAL D                       : std_logic;
   SIGNAL Q                       : std_logic;
   SIGNAL clk_out1                : std_logic;
   SIGNAL gt_qpllclk_quad1_out    : std_logic;
   SIGNAL gt_qpllrefclk_quad1_out : std_logic;
   SIGNAL gt_reset_out            : std_logic;
   signal raw_clk                 : std_logic;
   -- // This buffer also comes from the HiTech Global card.  It is LVDS 25.
-- // IBUFDS: Differential Input Buffer
-- // 7 Series
-- // Xilinx HDL Libraries Guide, version 2012.2
   SIGNAL lvds_clk                : std_logic;
   SIGNAL mmcm_not_locked_out     : std_logic;
   SIGNAL reset                   : std_logic;
   SIGNAL rxn0                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxn1                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxn2                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxn3                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxp0                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxp1                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxp2                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL rxp3                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL sync_clk_out            : std_logic;
   SIGNAL txn0                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txn1                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txn2                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txn3                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txp0                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txp1                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txp2                    : std_logic_vector(0 DOWNTO 0);
   SIGNAL txp3                    : std_logic_vector(0 DOWNTO 0);

   -- Implicit buffer signal declarations
   SIGNAL gt_refclk1_internal : std_logic;
   SIGNAL sys_reset_internal  : std_logic;
   SIGNAL user_clk_internal   : std_logic;
   SIGNAL init_clk_internal              : std_logic;


   -- Component Declarations
   COMPONENT aurora_64b66b_4
   PORT (
      drp_clk_in              : IN     std_logic;
      gt_refclk1_n            : IN     std_logic;
      gt_refclk1_p            : IN     std_logic;
      gt_rxcdrovrden_in       : IN     std_logic;
      init_clk                : IN     std_logic;
      loopback                : IN     std_logic_vector (2 DOWNTO 0);
      pma_init                : IN     std_logic;
      power_down              : IN     std_logic;
      reset_pb                : IN     std_logic;
      rxn                     : IN     std_logic_vector (0 DOWNTO 0);
      rxp                     : IN     std_logic_vector (0 DOWNTO 0);
      s_axi_araddr            : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_arvalid           : IN     std_logic;
      s_axi_awaddr            : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awvalid           : IN     std_logic;
      s_axi_bready            : IN     std_logic;
      s_axi_rready            : IN     std_logic;
      s_axi_tx_tdata          : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tvalid         : IN     std_logic;
      s_axi_wdata             : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wstrb             : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wvalid            : IN     std_logic;
      channel_up              : OUT    std_logic;
      gt_pll_lock             : OUT    std_logic;
      gt_qpllclk_quad1_out    : OUT    std_logic;
      gt_qpllrefclk_quad1_out : OUT    std_logic;
      gt_refclk1_out          : OUT    std_logic;
      gt_reset_out            : OUT    std_logic;
      hard_err                : OUT    std_logic;
      lane_up                 : OUT    std_logic_vector (0 DOWNTO 0);
      link_reset_out          : OUT    std_logic;
      m_axi_rx_tdata          : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tvalid         : OUT    std_logic;
      mmcm_not_locked_out     : OUT    std_logic;
      s_axi_arready           : OUT    std_logic;
      s_axi_awready           : OUT    std_logic;
      s_axi_bresp             : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bvalid            : OUT    std_logic;
      s_axi_rdata             : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rresp             : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rvalid            : OUT    std_logic;
      s_axi_tx_tready         : OUT    std_logic;
      s_axi_wready            : OUT    std_logic;
      soft_err                : OUT    std_logic;
      sync_clk_out            : OUT    std_logic;
      sys_reset_out           : OUT    std_logic;
      tx_out_clk              : OUT    std_logic;
      txn                     : OUT    std_logic_vector (0 DOWNTO 0);
      txp                     : OUT    std_logic_vector (0 DOWNTO 0);
      user_clk_out            : OUT    std_logic
   );
   END COMPONENT aurora_64b66b_4;
   COMPONENT aurora_64b66b_5
   PORT (
      drp_clk_in             : IN     std_logic;
      gt_qpllclk_quad1_in    : IN     std_logic;
      gt_qpllrefclk_quad1_in : IN     std_logic;
      gt_rxcdrovrden_in      : IN     std_logic;
      init_clk               : IN     std_logic;
      loopback               : IN     std_logic_vector (2 DOWNTO 0);
      mmcm_not_locked        : IN     std_logic;
      pma_init               : IN     std_logic;
      power_down             : IN     std_logic;
      refclk1_in             : IN     std_logic;
      reset_pb               : IN     std_logic;
      rxn                    : IN     std_logic_vector (0 DOWNTO 0);
      rxp                    : IN     std_logic_vector (0 DOWNTO 0);
      s_axi_araddr           : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_arvalid          : IN     std_logic;
      s_axi_awaddr           : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awvalid          : IN     std_logic;
      s_axi_bready           : IN     std_logic;
      s_axi_rready           : IN     std_logic;
      s_axi_tx_tdata         : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tvalid        : IN     std_logic;
      s_axi_wdata            : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wstrb            : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wvalid           : IN     std_logic;
      sync_clk               : IN     std_logic;
      user_clk               : IN     std_logic;
      channel_up             : OUT    std_logic;
      gt_pll_lock            : OUT    std_logic;
      hard_err               : OUT    std_logic;
      lane_up                : OUT    std_logic_vector (0 DOWNTO 0);
      link_reset_out         : OUT    std_logic;
      m_axi_rx_tdata         : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tvalid        : OUT    std_logic;
      s_axi_arready          : OUT    std_logic;
      s_axi_awready          : OUT    std_logic;
      s_axi_bresp            : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bvalid           : OUT    std_logic;
      s_axi_rdata            : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rresp            : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rvalid           : OUT    std_logic;
      s_axi_tx_tready        : OUT    std_logic;
      s_axi_wready           : OUT    std_logic;
      soft_err               : OUT    std_logic;
      sys_reset_out          : OUT    std_logic;
      tx_out_clk             : OUT    std_logic;
      txn                    : OUT    std_logic_vector (0 DOWNTO 0);
      txp                    : OUT    std_logic_vector (0 DOWNTO 0)
   );
   END COMPONENT aurora_64b66b_5;
   COMPONENT aurora_64b66b_6
   PORT (
      drp_clk_in             : IN     std_logic;
      gt_qpllclk_quad1_in    : IN     std_logic;
      gt_qpllrefclk_quad1_in : IN     std_logic;
      gt_rxcdrovrden_in      : IN     std_logic;
      init_clk               : IN     std_logic;
      loopback               : IN     std_logic_vector (2 DOWNTO 0);
      mmcm_not_locked        : IN     std_logic;
      pma_init               : IN     std_logic;
      power_down             : IN     std_logic;
      refclk1_in             : IN     std_logic;
      reset_pb               : IN     std_logic;
      rxn                    : IN     std_logic_vector (0 DOWNTO 0);
      rxp                    : IN     std_logic_vector (0 DOWNTO 0);
      s_axi_araddr           : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_arvalid          : IN     std_logic;
      s_axi_awaddr           : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awvalid          : IN     std_logic;
      s_axi_bready           : IN     std_logic;
      s_axi_rready           : IN     std_logic;
      s_axi_tx_tdata         : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tvalid        : IN     std_logic;
      s_axi_wdata            : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wstrb            : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wvalid           : IN     std_logic;
      sync_clk               : IN     std_logic;
      user_clk               : IN     std_logic;
      channel_up             : OUT    std_logic;
      gt_pll_lock            : OUT    std_logic;
      hard_err               : OUT    std_logic;
      lane_up                : OUT    std_logic_vector (0 DOWNTO 0);
      link_reset_out         : OUT    std_logic;
      m_axi_rx_tdata         : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tvalid        : OUT    std_logic;
      s_axi_arready          : OUT    std_logic;
      s_axi_awready          : OUT    std_logic;
      s_axi_bresp            : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bvalid           : OUT    std_logic;
      s_axi_rdata            : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rresp            : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rvalid           : OUT    std_logic;
      s_axi_tx_tready        : OUT    std_logic;
      s_axi_wready           : OUT    std_logic;
      soft_err               : OUT    std_logic;
      sys_reset_out          : OUT    std_logic;
      tx_out_clk             : OUT    std_logic;
      txn                    : OUT    std_logic_vector (0 DOWNTO 0);
      txp                    : OUT    std_logic_vector (0 DOWNTO 0)
   );
   END COMPONENT aurora_64b66b_6;
   COMPONENT aurora_64b66b_7
   PORT (
      drp_clk_in             : IN     std_logic;
      gt_qpllclk_quad1_in    : IN     std_logic;
      gt_qpllrefclk_quad1_in : IN     std_logic;
      gt_rxcdrovrden_in      : IN     std_logic;
      init_clk               : IN     std_logic;
      loopback               : IN     std_logic_vector (2 DOWNTO 0);
      mmcm_not_locked        : IN     std_logic;
      pma_init               : IN     std_logic;
      power_down             : IN     std_logic;
      refclk1_in             : IN     std_logic;
      reset_pb               : IN     std_logic;
      rxn                    : IN     std_logic_vector (0 DOWNTO 0);
      rxp                    : IN     std_logic_vector (0 DOWNTO 0);
      s_axi_araddr           : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_arvalid          : IN     std_logic;
      s_axi_awaddr           : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awvalid          : IN     std_logic;
      s_axi_bready           : IN     std_logic;
      s_axi_rready           : IN     std_logic;
      s_axi_tx_tdata         : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tvalid        : IN     std_logic;
      s_axi_wdata            : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wstrb            : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wvalid           : IN     std_logic;
      sync_clk               : IN     std_logic;
      user_clk               : IN     std_logic;
      channel_up             : OUT    std_logic;
      gt_pll_lock            : OUT    std_logic;
      hard_err               : OUT    std_logic;
      lane_up                : OUT    std_logic_vector (0 DOWNTO 0);
      link_reset_out         : OUT    std_logic;
      m_axi_rx_tdata         : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tvalid        : OUT    std_logic;
      s_axi_arready          : OUT    std_logic;
      s_axi_awready          : OUT    std_logic;
      s_axi_bresp            : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bvalid           : OUT    std_logic;
      s_axi_rdata            : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rresp            : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rvalid           : OUT    std_logic;
      s_axi_tx_tready        : OUT    std_logic;
      s_axi_wready           : OUT    std_logic;
      soft_err               : OUT    std_logic;
      sys_reset_out          : OUT    std_logic;
      tx_out_clk             : OUT    std_logic;
      txn                    : OUT    std_logic_vector (0 DOWNTO 0);
      txp                    : OUT    std_logic_vector (0 DOWNTO 0)
   );
   END COMPONENT aurora_64b66b_7;
   COMPONENT clk_wizard_0
   PORT (
      clk_in1     : IN     std_logic;
--      clk_out1_ce : IN     std_logic;
      clkfb_in    : IN     std_logic;
      reset       : IN     std_logic;
      clk_out1    : OUT    std_logic;
      clkfb_out   : OUT    std_logic;
      locked      : OUT    std_logic
   );
   END COMPONENT clk_wizard_0;
   -- COMPONENT IBUFDS
   -- GENERIC (
   --    dummy_param1 : string
   -- );
   -- PORT (
   --    I  : IN     std_logic;
   --    IB : IN     std_logic;
   --    O  : OUT    std_logic
   -- );
   -- END COMPONENT IBUFDS;
   -- COMPONENT SRL16E
   -- PORT (
   --    A0  : IN     std_logic;
   --    A1  : IN     std_logic;
   --    A2  : IN     std_logic;
   --    A3  : IN     std_logic;
   --    CE  : IN     std_logic;
   --    CLK : IN     std_logic;
   --    D   : IN     std_logic;
   --    Q   : OUT    std_logic
   -- );
   -- END COMPONENT SRL16E;
   --
   -- -- Optional embedded configurations
   -- -- pragma synthesis_off
   -- FOR ALL : IBUFDS USE ENTITY unisim.IBUFDS;
   -- FOR ALL : SRL16E USE ENTITY unisim.SRL16E;
   -- -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 2 eb2
   -- eb2 2
   txp <= txp3 & txp2 & txp1 & txp0;

   txn <= txn3 & txn2 & txn1 & txn0;

   rxp3(0) <= rxp(3);
   rxp2(0) <= rxp(2);
   rxp1(0) <= rxp(1);
   rxp0(0) <= rxp(0);

   rxn3(0) <= rxn(3);
   rxn2(0) <= rxn(2);
   rxn1(0) <= rxn(1);
   rxn0(0) <= rxn(0);


   -- ModuleWare code(v1.12) for instance 'U_0' of 'ppulldown'
   reset <= '0';

   -- ModuleWare code(v1.12) for instance 'U_2' of 'ppullup'
   A0 <= '1';

   -- Instance port mappings.
   master_0 : aurora_64b66b_4
      PORT MAP (
         s_axi_tx_tdata          => s_axi_tx_tdata0,
         s_axi_tx_tvalid         => s_axi_tx_tvalid0,
         s_axi_tx_tready         => s_axi_tx_tready0,
         m_axi_rx_tdata          => m_axi_rx_tdata0,
         m_axi_rx_tvalid         => m_axi_rx_tvalid0,
         rxp                     => rxp0,
         rxn                     => rxn0,
         txp                     => txp0,
         txn                     => txn0,
         gt_refclk1_p            => gt_refclk1_p,
         gt_refclk1_n            => gt_refclk1_n,
         gt_refclk1_out          => gt_refclk1_internal,
         hard_err                => hard_err0,
         soft_err                => soft_err0,
         channel_up              => channel_up0,
         lane_up                 => lane_up0,
         user_clk_out            => user_clk_internal,
         mmcm_not_locked_out     => mmcm_not_locked_out,
         sync_clk_out            => sync_clk_out,
         reset_pb                => reset_pb,
         gt_rxcdrovrden_in       => gt_rxcdrovrden_in,
         power_down              => power_down,
         loopback                => loopback,
         pma_init                => pma_init,
         gt_pll_lock             => gt_pll_lock0,
         drp_clk_in              => drp_clk_in,
         s_axi_awaddr            => s_axi_awaddr0,
         s_axi_awvalid           => s_axi_awvalid0,
         s_axi_awready           => s_axi_awready0,
         s_axi_wdata             => s_axi_wdata0,
         s_axi_wstrb             => s_axi_wstrb0,
         s_axi_wvalid            => s_axi_wvalid0,
         s_axi_wready            => s_axi_wready0,
         s_axi_bvalid            => s_axi_bvalid0,
         s_axi_bresp             => s_axi_bresp0,
         s_axi_bready            => s_axi_bready0,
         s_axi_araddr            => s_axi_araddr0,
         s_axi_arvalid           => s_axi_arvalid0,
         s_axi_arready           => s_axi_arready0,
         s_axi_rdata             => s_axi_rdata0,
         s_axi_rvalid            => s_axi_rvalid0,
         s_axi_rresp             => s_axi_rresp0,
         s_axi_rready            => s_axi_rready0,
         init_clk                => init_clk_internal,
         link_reset_out          => OPEN,
         gt_qpllclk_quad1_out    => gt_qpllclk_quad1_out,
         gt_qpllrefclk_quad1_out => gt_qpllrefclk_quad1_out,
         sys_reset_out           => sys_reset_internal,
         gt_reset_out            => gt_reset_out,
         tx_out_clk              => OPEN
      );
   slave_1 : aurora_64b66b_5
      PORT MAP (
         s_axi_tx_tdata         => s_axi_tx_tdata1,
         s_axi_tx_tvalid        => s_axi_tx_tvalid1,
         s_axi_tx_tready        => s_axi_tx_tready1,
         m_axi_rx_tdata         => m_axi_rx_tdata1,
         m_axi_rx_tvalid        => m_axi_rx_tvalid1,
         rxp                    => rxp1,
         rxn                    => rxn1,
         txp                    => txp1,
         txn                    => txn1,
         refclk1_in             => gt_refclk1_internal,
         hard_err               => hard_err1,
         soft_err               => soft_err1,
         channel_up             => channel_up1,
         lane_up                => lane_up1,
         mmcm_not_locked        => mmcm_not_locked_out,
         user_clk               => user_clk_internal,
         sync_clk               => sync_clk_out,
         reset_pb               => sys_reset_internal,
         gt_rxcdrovrden_in      => gt_rxcdrovrden_in,
         power_down             => power_down,
         loopback               => loopback,
         pma_init               => gt_reset_out,
         gt_pll_lock            => gt_pll_lock1,
         drp_clk_in             => drp_clk_in,
         gt_qpllclk_quad1_in    => gt_qpllclk_quad1_out,
         gt_qpllrefclk_quad1_in => gt_qpllrefclk_quad1_out,
         s_axi_awaddr           => s_axi_awaddr1,
         s_axi_awvalid          => s_axi_awvalid1,
         s_axi_awready          => s_axi_awready1,
         s_axi_wdata            => s_axi_wdata1,
         s_axi_wstrb            => s_axi_wstrb1,
         s_axi_wvalid           => s_axi_wvalid1,
         s_axi_wready           => s_axi_wready1,
         s_axi_bvalid           => s_axi_bvalid1,
         s_axi_bresp            => s_axi_bresp1,
         s_axi_bready           => s_axi_bready1,
         s_axi_araddr           => s_axi_araddr1,
         s_axi_arvalid          => s_axi_arvalid1,
         s_axi_arready          => s_axi_arready1,
         s_axi_rdata            => s_axi_rdata1,
         s_axi_rvalid           => s_axi_rvalid1,
         s_axi_rresp            => s_axi_rresp1,
         s_axi_rready           => s_axi_rready1,
         init_clk               => init_clk_internal,
         link_reset_out         => OPEN,
         sys_reset_out          => OPEN,
         tx_out_clk             => OPEN
      );
   slave_2 : aurora_64b66b_6
      PORT MAP (
         s_axi_tx_tdata         => s_axi_tx_tdata2,
         s_axi_tx_tvalid        => s_axi_tx_tvalid2,
         s_axi_tx_tready        => s_axi_tx_tready2,
         m_axi_rx_tdata         => m_axi_rx_tdata2,
         m_axi_rx_tvalid        => m_axi_rx_tvalid2,
         rxp                    => rxp2,
         rxn                    => rxn2,
         txp                    => txp2,
         txn                    => txn2,
         refclk1_in             => gt_refclk1_internal,
         hard_err               => hard_err2,
         soft_err               => soft_err2,
         channel_up             => channel_up2,
         lane_up                => lane_up2,
         mmcm_not_locked        => mmcm_not_locked_out,
         user_clk               => user_clk_internal,
         sync_clk               => sync_clk_out,
         reset_pb               => sys_reset_internal,
         gt_rxcdrovrden_in      => gt_rxcdrovrden_in,
         power_down             => power_down,
         loopback               => loopback,
         pma_init               => gt_reset_out,
         gt_pll_lock            => gt_pll_lock2,
         drp_clk_in             => drp_clk_in,
         gt_qpllclk_quad1_in    => gt_qpllclk_quad1_out,
         gt_qpllrefclk_quad1_in => gt_qpllrefclk_quad1_out,
         s_axi_awaddr           => s_axi_awaddr2,
         s_axi_awvalid          => s_axi_awvalid2,
         s_axi_awready          => s_axi_awready2,
         s_axi_wdata            => s_axi_wdata2,
         s_axi_wstrb            => s_axi_wstrb2,
         s_axi_wvalid           => s_axi_wvalid2,
         s_axi_wready           => s_axi_wready2,
         s_axi_bvalid           => s_axi_bvalid2,
         s_axi_bresp            => s_axi_bresp2,
         s_axi_bready           => s_axi_bready2,
         s_axi_araddr           => s_axi_araddr2,
         s_axi_arvalid          => s_axi_arvalid2,
         s_axi_arready          => s_axi_arready2,
         s_axi_rdata            => s_axi_rdata2,
         s_axi_rvalid           => s_axi_rvalid2,
         s_axi_rresp            => s_axi_rresp2,
         s_axi_rready           => s_axi_rready2,
         init_clk               => init_clk_internal,
         link_reset_out         => OPEN,
         sys_reset_out          => OPEN,
         tx_out_clk             => OPEN
      );
   slave_3 : aurora_64b66b_7
      PORT MAP (
         s_axi_tx_tdata         => s_axi_tx_tdata3,
         s_axi_tx_tvalid        => s_axi_tx_tvalid3,
         s_axi_tx_tready        => s_axi_tx_tready3,
         m_axi_rx_tdata         => m_axi_rx_tdata3,
         m_axi_rx_tvalid        => m_axi_rx_tvalid3,
         rxp                    => rxp3,
         rxn                    => rxn3,
         txp                    => txp3,
         txn                    => txn3,
         refclk1_in             => gt_refclk1_internal,
         hard_err               => hard_err3,
         soft_err               => soft_err3,
         channel_up             => channel_up3,
         lane_up                => lane_up3,
         mmcm_not_locked        => mmcm_not_locked_out,
         user_clk               => user_clk_internal,
         sync_clk               => sync_clk_out,
         reset_pb               => sys_reset_internal,
         gt_rxcdrovrden_in      => gt_rxcdrovrden_in,
         power_down             => power_down,
         loopback               => loopback,
         pma_init               => gt_reset_out,
         gt_pll_lock            => gt_pll_lock3,
         drp_clk_in             => drp_clk_in,
         gt_qpllclk_quad1_in    => gt_qpllclk_quad1_out,
         gt_qpllrefclk_quad1_in => gt_qpllrefclk_quad1_out,
         s_axi_awaddr           => s_axi_awaddr3,
         s_axi_awvalid          => s_axi_awvalid3,
         s_axi_awready          => s_axi_awready3,
         s_axi_wdata            => s_axi_wdata3,
         s_axi_wstrb            => s_axi_wstrb3,
         s_axi_wvalid           => s_axi_wvalid3,
         s_axi_wready           => s_axi_wready3,
         s_axi_bvalid           => s_axi_bvalid3,
         s_axi_bresp            => s_axi_bresp3,
         s_axi_bready           => s_axi_bready3,
         s_axi_araddr           => s_axi_araddr3,
         s_axi_arvalid          => s_axi_arvalid3,
         s_axi_arready          => s_axi_arready3,
         s_axi_rdata            => s_axi_rdata3,
         s_axi_rvalid           => s_axi_rvalid3,
         s_axi_rresp            => s_axi_rresp3,
         s_axi_rready           => s_axi_rready3,
         init_clk               => init_clk_internal,
         link_reset_out         => OPEN,
         sys_reset_out          => OPEN,
         tx_out_clk             => OPEN
      );
   generate_69M44 : clk_wizard_0
      PORT MAP (
         clkfb_in    => clk_out1,
--         clk_out1_ce => Q,
         clk_out1    => raw_clk,
         clkfb_out   => clk_out1,
         reset       => reset,
         locked      => D,
         clk_in1     => lvds_clk
      );
   IBUFDS_inst : IBUFDS
      GENERIC MAP (
          DIFF_TERM => FALSE, -- Differential Termination
          IBUF_LOW_PWR => TRUE, -- Low power (TRUE) vs. performance (FALSE) setting for referenced I/O standards
          IOSTANDARD => "DEFAULT"
      )
      PORT MAP (
         I  => init_clk_p,
         IB => init_clk_n,
         O  => lvds_clk
      );
   SRL16E_inst : SRL16E
      PORT MAP (
         A0  => A0,
         A1  => A0,
         A2  => A0,
         A3  => A0,
         CE  => A0,
         CLK => raw_clk,
         D   => D,
         Q   => Q
      );

BUFGCE_inst : BUFGCE
port map (
O => init_clk_internal, -- 1-bit output: Clock output
CE => Q, -- 1-bit input: Clock enable input for I0
I => raw_clk -- 1-bit input: Primary clock
);

   -- Implicit buffered output assignments
   gt_refclk1 <= gt_refclk1_internal;
   sys_reset  <= sys_reset_internal;
   user_clk   <= user_clk_internal;
   init_clk <= init_clk_internal;

END ARCHITECTURE struct;
