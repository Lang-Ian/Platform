-- VHDL Entity aurora4.aurora4.symbol
--
-- Created:
--          by - iala270035.UNKNOWN (ATL00049)
--          at - 17:55:01 12.04.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2020.1 Built on 20 Jan 2020 at 19:37:36
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY aurora4 IS
   PORT(
      drp_clk_in        : IN     std_logic;
      gt_refclk1_n      : IN     std_logic;
      gt_refclk1_p      : IN     std_logic;
      gt_rxcdrovrden_in : IN     std_logic;
      init_clk_n        : IN     std_logic;
      init_clk_p        : IN     std_logic;
      loopback          : IN     std_logic_vector (2 DOWNTO 0);
      pma_init          : IN     std_logic;
      power_down        : IN     std_logic;
      reset_pb          : IN     std_logic;
      rxn               : IN     std_logic_vector (3 DOWNTO 0);
      rxp               : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_araddr0     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_araddr1     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_araddr2     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_araddr3     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_arvalid0    : IN     std_logic;
      s_axi_arvalid1    : IN     std_logic;
      s_axi_arvalid2    : IN     std_logic;
      s_axi_arvalid3    : IN     std_logic;
      s_axi_awaddr0     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awaddr1     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awaddr2     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awaddr3     : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_awvalid0    : IN     std_logic;
      s_axi_awvalid1    : IN     std_logic;
      s_axi_awvalid2    : IN     std_logic;
      s_axi_awvalid3    : IN     std_logic;
      s_axi_bready0     : IN     std_logic;
      s_axi_bready1     : IN     std_logic;
      s_axi_bready2     : IN     std_logic;
      s_axi_bready3     : IN     std_logic;
      s_axi_rready0     : IN     std_logic;
      s_axi_rready1     : IN     std_logic;
      s_axi_rready2     : IN     std_logic;
      s_axi_rready3     : IN     std_logic;
      s_axi_tx_tdata0   : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tdata1   : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tdata2   : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tdata3   : IN     std_logic_vector (0 TO 63);
      s_axi_tx_tvalid0  : IN     std_logic;
      s_axi_tx_tvalid1  : IN     std_logic;
      s_axi_tx_tvalid2  : IN     std_logic;
      s_axi_tx_tvalid3  : IN     std_logic;
      s_axi_wdata0      : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wdata1      : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wdata2      : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wdata3      : IN     std_logic_vector (31 DOWNTO 0);
      s_axi_wstrb0      : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wstrb1      : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wstrb2      : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wstrb3      : IN     std_logic_vector (3 DOWNTO 0);
      s_axi_wvalid0     : IN     std_logic;
      s_axi_wvalid1     : IN     std_logic;
      s_axi_wvalid2     : IN     std_logic;
      s_axi_wvalid3     : IN     std_logic;
      channel_up0       : OUT    std_logic;
      channel_up1       : OUT    std_logic;
      channel_up2       : OUT    std_logic;
      channel_up3       : OUT    std_logic;
      gt_pll_lock0      : OUT    std_logic;
      gt_pll_lock1      : OUT    std_logic;
      gt_pll_lock2      : OUT    std_logic;
      gt_pll_lock3      : OUT    std_logic;
      gt_refclk1        : OUT    std_logic;
      hard_err0         : OUT    std_logic;
      hard_err1         : OUT    std_logic;
      hard_err2         : OUT    std_logic;
      hard_err3         : OUT    std_logic;
      lane_up0          : OUT    std_logic_vector (0 DOWNTO 0);
      lane_up1          : OUT    std_logic_vector (0 DOWNTO 0);
      lane_up2          : OUT    std_logic_vector (0 DOWNTO 0);
      lane_up3          : OUT    std_logic_vector (0 DOWNTO 0);
      m_axi_rx_tdata0   : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tdata1   : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tdata2   : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tdata3   : OUT    std_logic_vector (0 TO 63);
      m_axi_rx_tvalid0  : OUT    std_logic;
      m_axi_rx_tvalid1  : OUT    std_logic;
      m_axi_rx_tvalid2  : OUT    std_logic;
      m_axi_rx_tvalid3  : OUT    std_logic;
      s_axi_arready0    : OUT    std_logic;
      s_axi_arready1    : OUT    std_logic;
      s_axi_arready2    : OUT    std_logic;
      s_axi_arready3    : OUT    std_logic;
      s_axi_awready0    : OUT    std_logic;
      s_axi_awready1    : OUT    std_logic;
      s_axi_awready2    : OUT    std_logic;
      s_axi_awready3    : OUT    std_logic;
      s_axi_bresp0      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bresp1      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bresp2      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bresp3      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_bvalid0     : OUT    std_logic;
      s_axi_bvalid1     : OUT    std_logic;
      s_axi_bvalid2     : OUT    std_logic;
      s_axi_bvalid3     : OUT    std_logic;
      s_axi_rdata0      : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rdata1      : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rdata2      : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rdata3      : OUT    std_logic_vector (31 DOWNTO 0);
      s_axi_rresp0      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rresp1      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rresp2      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rresp3      : OUT    std_logic_vector (1 DOWNTO 0);
      s_axi_rvalid0     : OUT    std_logic;
      s_axi_rvalid1     : OUT    std_logic;
      s_axi_rvalid2     : OUT    std_logic;
      s_axi_rvalid3     : OUT    std_logic;
      s_axi_tx_tready0  : OUT    std_logic;
      s_axi_tx_tready1  : OUT    std_logic;
      s_axi_tx_tready2  : OUT    std_logic;
      s_axi_tx_tready3  : OUT    std_logic;
      s_axi_wready0     : OUT    std_logic;
      s_axi_wready1     : OUT    std_logic;
      s_axi_wready2     : OUT    std_logic;
      s_axi_wready3     : OUT    std_logic;
      soft_err0         : OUT    std_logic;
      soft_err1         : OUT    std_logic;
      soft_err2         : OUT    std_logic;
      soft_err3         : OUT    std_logic;
      sys_reset         : OUT    std_logic;
      txn               : OUT    std_logic_vector (3 DOWNTO 0);
      txp               : OUT    std_logic_vector (3 DOWNTO 0);
      user_clk          : OUT    std_logic;
      init_clk : out std_logic  -- decided to add this after exporting from HDL Designer
   );

-- Declarations

END ENTITY aurora4 ;
